<html>
  <head>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.11.1.min.js"></script>

    <style type="text/css">
      .player {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 20px;
      }

      .red {
        background-color: #e74c3c;
      }

      .blue {
        background-color: #3498db;
      }

      .green {
        background-color: #3fd47e;
      }

      .purple {
        background-color: #9b59b6;
      }

      .yellow {
        background-color: #f1c40f;
      }

      .dark {
        background-color: #2c3e50;
      }
    </style>
  </head>
  <body>
    <div class="green" style="position: absolute; left: 10px; top: 10px; width: auto; height: 20px;">
      <center>
        CODE <%= room %>
      </center>
    </div>
    <!-- <div id="screen" style="background-color: #bdc3c7; width:100%; height: 100%;"> -->
    <canvas id="screen" width="700" height="500" style="background-color: #bdc3c7; "></canvas>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script src="../javascripts/tinyGameEngine.js"></script>
    <script type="text/javascript">
    var players = [];
    var last_player_num = 0;
    var colors = ["red","blue","green","purple","yellow","dark"];
    var last_color = 0;

    var game_players = {};
    var h = window.innerHeight;
    var w = window.innerWidth;
    var X_VELOCITY = 1;
    var Y_VELOCITY = 1;


    var cg = document.getElementById("screen");
    cg.width = window.innerWidth;
    cg.height = window.innerHeight;
    var context;

    if(cg.getContext){
        context = cg.getContext("2d");

        gameTick(1000/60, context, game_players);

    }

    function move(player_id, left, up) {

      // console.log("LEFT"+left);
      // console.log("UP"+up);

      var player = game_players[player_id];
      if(player){
        game_players[player_id].moveRight(left);
        game_players[player_id].moveUp(up);
      }

    }



    function createPlayer(id, cb) {
      var color = nextColor();
      var top   = Math.floor(Math.random() * 90);
      var left  = Math.floor(Math.random() * 90);

      var new_player = newPixelObject(context, color);
      new_player.pos.x = top;
      new_player.pos.y = left;
      new_player.id = id;

      game_players[id] = new_player;

      // players.push(last_player_num); //still needed?
      cb(last_player_num);
    }


    function deletePlayer(id) {
      // $('#'+num).remove();
      // players.splice(players.indexOf(num), 1);
      delete game_players[id];
    }



    function nextColor() {
      return colors[(last_color++) % colors.length];
    }


    // SOCKET EVENTS
    var socket = io.connect("");

    $(document).ready(function() {
        socket.emit('join_game', {room: '<%= room %>', type: "screen"});
    });

    socket.on("player_joined_game", function(data) {
      console.log("Socket id:" + data.socket_id);
      createPlayer(data.socket_id, function(player_num) {
        socket.emit("assign_number", { number: player_num, socket_id: data.socket_id });
      });
    });

    socket.on("move", function(data) {
      // console.log("Recieved move: dx:"+data.dx+" dy:"+data.dy);
      move(data.number, data.dx, data.dy);
    });

    socket.on("disconnect", function(data) {
      deletePlayer(data.number);

    });

    socket.on('player_disconnected', function(data) {
        console.log(data.type + " disconnected...");
        console.log(data);
        if(data.type == "controller") {
          deletePlayer(data.number);
        }
    });

    </script>
  </body>
</html>
